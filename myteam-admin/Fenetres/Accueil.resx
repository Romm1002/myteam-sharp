<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="menuStrip.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>